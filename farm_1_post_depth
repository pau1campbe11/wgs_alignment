This will calculate the depth per site using samtools v1.18

However, on MARS I think you want to use the envs/samtools-1.17 (https://www.htslib.org/doc/1.17/samtools-depth.html)
```
#!/bin/bash -l

############# SLURM SETTINGS #############
#SBATCH --account=project0005   # account name (mandatory), if the job runs under a project then it'll be the project name, if not then it should =none
#SBATCH --job-name=f1_post_depth     # some descriptive job name of your choice
#SBATCH --output=%x-%J.out      # output file name will contain job name + job ID
#SBATCH --error=%x-%J.err       # error file name will contain job name + job ID
#SBATCH --time=0-05:00:00       # time limit for the whole run, in the form of d-hh:mm:ss, also accepts mm, mm:ss, hh:mm:ss, d-hh, d-hh:mm
#SBATCH --mem=5G                # memory required per node, in the form of [num][M|G|T]
#SBATCH --ntasks=1              # number of Slurm tasks to be launched, increase for multi-process runs ex. MPI
#SBATCH --cpus-per-task=1       # number of processor cores to be assigned for each task, default is 1, increase for multi-threaded runs
#SBATCH --ntasks-per-node=1     # number of tasks to be launched on each allocated node

############# LOADING MODULES (optional) #############

module load apps/miniforge
conda activate samtools-1.17

############# MY CODE #############

samtools depth -a -f /users/2320707c/project0005/for_paul_oster/2.bwasplitter/bam.list -H  -o farm1_depth_out -q 30 -Q 20 -g SECONDARY,QCFAIL -G DUP -s

# -a Output all positions (including those with zero depth)
# -f FILE Use the BAM files specified in the FILE (a file of filenames, one file per line) []
# -H Write a comment line showing column names at the beginning of the output. The names are CHROM, POS, and then the input file name for each depth column. If one of the inputs came from stdin, the name “-” will be used for the corresponding column.
# -o FILE Write output to FILE. Using “-” for FILE will send the output to stdout (also the default if this option is not used).
# -q, --min-BQ INT Only count reads with base quality greater than or equal to INT
# -Q, --min-MQ INT Only count reads with mapping quality greater than or equal to INT
# -r CHR:FROM-TO Only report depth in specified region.
# -g FLAGS By default, reads that have any of the flags UNMAP, SECONDARY, QCFAIL, or DUP set are skipped. To include these reads back in the analysis, use this option together with the desired flag or flag combination. FLAGS can be specified in hex by beginning with `0x' (i.e. /^0x[0-9A-F]+/), in octal by beginning with `0' (i.e. /^0[0-7]+/), as a decimal number not beginning with '0' or as a comma-separated list of flag names. [0] For a list of flag names see samtools-flags(1).
# -G FLAGS, --excl-flags FLAGS Discard reads that have any of the flags specified by FLAGS set. FLAGS are specified as for the -g option. [UNMAP,SECONDARY,QCFAIL,DUP]
# -s For the overlapping section of a read pair, count only the bases of the first read. Note this algorithm changed in 1.13 so the results may differ slightly to older releases.
```
